<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.antzuhl.zeus.dao.AuditLogMapper">
    <resultMap id="BaseResultMap" type="com.antzuhl.zeus.beans.AuditLog">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="method" property="method" jdbcType="VARCHAR"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="living" property="living" jdbcType="INTEGER"/>
        <result column="use_time" property="useTime" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, create_time, modify_time, method, path, living, use_time, status
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from audit_log
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from audit_log;
    </select>
    <select id="getNoAccessAuditLogs" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from audit_log
        where living = 1;
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from audit_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.antzuhl.zeus.beans.AuditLog">
    insert into audit_log (id, create_time, modify_time,
      method, path, living, use_time, status
      )
    values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP},
      #{method,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{living,jdbcType=INTEGER},#{useTime,jdbcType=VARCHAR},#{status,jdbcType=INTEGER}
      )
  </insert>
    <!--  useGeneratedKeys="true" keyProperty="id"-->
    <insert id="insertSelective" parameterType="com.antzuhl.zeus.beans.AuditLog">
        insert into audit_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="method != null">
                method,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="living != null">
                living,
            </if>
            <if test="useTime != null">
                use_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="method != null">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="living != null">
                #{living,jdbcType=INTEGER},
            </if>
            <if test="useTime != null">
                #{useTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.antzuhl.zeus.beans.AuditLog">
        update audit_log
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="method != null">
                method = #{method,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="living != null">
                path = #{living,jdbcType=INTEGER},
            </if>
            <if test="useTime != null">
                use_time = #{useTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.antzuhl.zeus.beans.AuditLog">
    update audit_log
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      method = #{method,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      living = #{living,jdbcType=INTEGER},
      use_time = #{useTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <update id="ruleOut" parameterType="java.lang.String">
    update audit_log
    set living = 0
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <update id="createTable">
    CREATE TABLE IF NOT EXISTS `audit_log`
    (
      id VARCHAR (255),
      create_time timestamp(0) NOT NULL,
      modify_time timestamp(0) NOT NULL,
      method varchar (255),
      path varchar(255),
      living INTEGER (255),
      use_time VARCHAR (255),
      status INTEGER (255)
    )
  </update>
</mapper>
